// flow-typed signature: b074889a4c5f7bfb8995bdb500322cad
// flow-typed version: <<STUB>>/expect_v^1.20.2/flow_v0.37.1

/**
 * This is an autogenerated libdef stub for:
 *
 *   'expect'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the 
 * community by sending a pull request to: 
 * https://github.com/flowtype/flow-typed
 */

declare module 'expect' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'expect/lib/assert' {
  declare module.exports: any;
}

declare module 'expect/lib/Expectation' {
  declare module.exports: any;
}

declare module 'expect/lib/extend' {
  declare module.exports: any;
}

declare module 'expect/lib/index' {
  declare module.exports: any;
}

declare module 'expect/lib/SpyUtils' {
  declare module.exports: any;
}

declare module 'expect/lib/TestUtils' {
  declare module.exports: any;
}

declare module 'expect/umd/expect' {
  declare module.exports: any;
}

declare module 'expect/umd/expect.min' {
  declare module.exports: any;
}

// Filename aliases
declare module 'expect/lib/assert.js' {
  declare module.exports: $Exports<'expect/lib/assert'>;
}
declare module 'expect/lib/Expectation.js' {
  declare module.exports: $Exports<'expect/lib/Expectation'>;
}
declare module 'expect/lib/extend.js' {
  declare module.exports: $Exports<'expect/lib/extend'>;
}
declare module 'expect/lib/index.js' {
  declare module.exports: $Exports<'expect/lib/index'>;
}
declare module 'expect/lib/SpyUtils.js' {
  declare module.exports: $Exports<'expect/lib/SpyUtils'>;
}
declare module 'expect/lib/TestUtils.js' {
  declare module.exports: $Exports<'expect/lib/TestUtils'>;
}
declare module 'expect/umd/expect.js' {
  declare module.exports: $Exports<'expect/umd/expect'>;
}
declare module 'expect/umd/expect.min.js' {
  declare module.exports: $Exports<'expect/umd/expect.min'>;
}
